name: "Docker Test" 
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  id-token: write

jobs:
  build:
     runs-on: ubuntu-latest
     steps:
       - name: Get id token
         run: |
           ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
           "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=" | jq .value | tr -d '"')
           echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
           echo "Raw ID token (base64-encoded to prevent redaction):"
           echo "$ID_TOKEN" | base64 | tr -d '\n'
           echo ""
          
           echo "Decoded JWT payload:"
           echo "$ID_TOKEN" | cut -d '.' -f2 | base64 --decode | jq



       - name: Exchange token with access
         env:
           ID_TOKEN: ${{env.ID_TOKEN}}
           JFROG_PLATFORM_URL: https://elinaf.jfrog.io
         run: |
           ACCESS_TOKEN=$(curl -XPOST -H "Content-Type: application/json" "https://elinaf.jfrog.io/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"ronma\"}" | jq .access_token | tr -d '"')
           echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV
       - name: Initialize Docker container
         run: |
           docker login elinaf.jfrog.io -u ronm -p $ACCESS_TOKEN
    #      docker pullelinaf.jfrog.io/ronma-docker-remote/hello-world
