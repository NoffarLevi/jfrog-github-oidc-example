name: "Setup JFrog CLI OIDC Example2"
on: push

permissions:
  # This is required for requesting the OIDC token
  id-token: write
  # This is required for actions/checkout
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: https://elinaf.jfrog.io
        with:
          # Name of the OIDC provider as specified on the OIDC integration page in the JFrog Platform
          oidc-provider-name: roin-oidc

      - name: Docker login to Artifactory
        uses: docker/login-action@v3.3.0
        with:
          registry: elinaf.jfrog.io
          username: roin
          password: Password1!
      - name: docker pull
        run: docker pull elinaf.jfrog.io/roin-docker-remote/library/alpine
        shell: bash
      - name: Get GitHub OIDC Token
        id: get_oidc_token
        run: |
          TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL")
          OIDC_TOKEN=$(echo "$TOKEN" | jq -r '.value')
          echo "OIDC_TOKEN=$OIDC_TOKEN" >> $GITHUB_ENV

      - name: Exchange OIDC Token for JFrog Access Token
        id: jfrog_token_exchange
        run: |
          RESPONSE=$(curl -s -X POST https://elinaf.jfrog.io/access/api/v1/oidc/token \
            -H "Content-Type: application/json" \
            -d "{\"grant_type\":\"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\":\"$OIDC_TOKEN\", \"provider_name\":\"roin-oidc\"}")
          ACCESS_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')
          echo "JFROG_ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Run GraphQL Query on JFrogg
        run: |
          QUERY='{ "query": "{ system { version } }" }'
          curl -s -X POST https://elinaf.jfrog.io/metadata/api/v1/query \
            -H "Authorization: Bearer $JFROG_ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{}'
